user nginx;
worker_processes auto;

events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	sendfile on;
	keepalive_timeout 65;

	include ./upstreams/*;

	server {
		server_name portalstaging.ort.spb.ru;
		listen 443 ssl;
		ssl_certificate /etc/letsencrypt/live/portaltest.ort.spb.ru/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/portaltest.ort.spb.ru/privkey.pem;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;
		ssl_session_cache shared:SSL:10m;
		ssl_session_tickets off;

		# Define common proxy settings
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection_upgrade;

		# Define a variable for repeated proxy_set_header directives
		set $upstream_app app;
		set $upstream_supabase supabase;
		set $upstream_file_system file_system;

		#access_log  /var/log/nginx/host.access.log main;

		# REST for supabase
		location ~ ^/rest/v1/(.*)$ {
			proxy_pass http://$upstream_supabase;
		}

		# APIs for main app
		location ~ ^/api/public/(.*)$ {
			proxy_pass http://$upstream_app;
			proxy_set_header access_token $http_access_token;
		}
		location ~ ^/api/admin/(.*)$ {
			proxy_set_header access_token $http_access_token;
			proxy_pass http://$upstream_app;
		}

		# API for supabase dashboard
		location ~ ^/api/(.*)$ {
			proxy_pass http://$upstream_supabase;
		}

		# AUTH for supabase
		location ~ ^/auth/v1/(.*)$ {
			proxy_pass http://$upstream_supabase;
		}

		# REALTIME, DASHBOARD -> STATIC FILES, IMAGES, FAVICON
		# All for supabase
		location ~ ^/(css|monaco-editor|realtime|project|_next|img|favicon)/(.*)$ {
			proxy_pass http://$upstream_supabase;
		}

		# FILE SYSTEM
		location ~ ^/fs/(.*)$ {
			proxy_set_header access_token $http_access_token;
			proxy_pass http://$upstream_file_system;
		}

		# Default route
		location / {
			proxy_pass http://$upstream_app;
		}
	}

	# Define the map block at the http level
	map $http_referer $is_sb_referer {
		"~^https?://[^/]+/_sb" 1;
		"~^http://[^/]+/_sb" 1;
		default 0;
	}

	server {
		server_name portaltest.ort.spb.ru;
		listen 443 ssl;
		ssl_certificate /etc/letsencrypt/live/portaltest.ort.spb.ru/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/portaltest.ort.spb.ru/privkey.pem;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;
		ssl_session_cache shared:SSL:10m;
		ssl_session_tickets off;

		# Define a variable for repeated proxy_set_header directives
		set $upstream_app app_preview;
		set $upstream_supabase supabase;
		set $upstream_file_system file_system;

		# Handle requests that start with /_sb
		location ~ ^/_sb/(.*)$ {
			rewrite ^/_sb/(.*)$ /$1 break;
			proxy_pass http://$upstream_supabase;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Optionally, configure other proxy settings
			proxy_connect_timeout 60s;
			proxy_send_timeout 60s;
			proxy_read_timeout 60s;
			proxy_buffering off;
		}

		location ~ ^/fs/(.*)$ {
			proxy_set_header access_token $http_access_token;
			proxy_pass http://$upstream_file_system;
		}

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Handle requests from referers that start with /_sb
			if ($is_sb_referer) {
				rewrite ^/_sb/(.*)$ /$1 break;
				proxy_pass http://$upstream_supabase;
				break;
			}
			proxy_pass http://$upstream_app;
		}
	}

	# Redirect to HTTPS
	server {
		listen 80 default_server;
		server_name _;
		return 301 https://$host$request_uri;
	}
}