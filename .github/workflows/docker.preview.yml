name: Docker deployment - Preview

run-name: ${{github.event.head_commit.message}} - Preview [${{ github.run_id }}]

on:
    push:
        branches:
            - "dev"
    pull_request_target:
        branches:
            - "master"

jobs:
    Check_changes:
        runs-on: ubuntu-latest
        outputs:
            files_changed: ${{ steps.check.outputs.files_changed }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Determine base branch
              id: determine_base
              run: |
                  # Extract the branch name from github.ref
                  BRANCH_NAME=${GITHUB_REF#refs/heads/}
                  echo "Base branch: $BRANCH_NAME"
                  echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

            - name: Check if specific files have changed
              id: check
              run: |
                  # Initialize the files_changed variable
                  files_changed=false

                  # Fetch all commits to ensure we can check the entire history
                  git fetch --unshallow

                  # Get the base branch name
                  BASE_BRANCH=${{ steps.determine_base.outputs.branch_name }}

                  # Get the list of all changed files from the base branch to HEAD
                  changed_files=$(git diff --name-only HEAD^ HEAD)

                  # Filter the list of changed files, excluding the specified directories
                  set +e
                  filtered_files=$(echo "$changed_files" | grep -Ev '^(supabase/|\.github/|nginx/|\.vscode/)')
                  grep_exit_code=$?
                  set -e

                  # Check if grep had any matches (exit code 0) or not (exit code 1)
                  if [ $grep_exit_code -eq 0 ]; then
                    echo "Filtered files:"
                    echo "$filtered_files"
                    files_changed=true
                  elif [ $grep_exit_code -eq 1 ]; then
                    echo "No files matched the pattern."
                  else
                    echo "An error occurred while filtering files."
                    exit 1
                  fi

                  # Output the result using the new method
                  echo "files_changed=$files_changed" >> $GITHUB_ENV
                  echo "files_changed=$files_changed" >> $GITHUB_OUTPUT

            - name: Output result
              run: |
                  echo "Files changed: ${{ steps.check.outputs.files_changed }}"

    Image_build:
        runs-on: ubuntu-latest
        environment: preview
        needs:
            - Check_changes
        if: ${{ needs.Check_changes.outputs.files_changed == 'true' }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: "Create .env file"
              run: |
                  echo -e "${{ secrets.PREVIEW_ENV_FILE }}\nBUILD_ID=${{ github.run_id }}\nNITRO_PRESET='node-server'" > .env
            - name: Build and push - Main image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: paranoidphantom/550-web:preview
                  build-args: |
                      NITRO_PRESET=node-server
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    Deploy:
        runs-on: self-hosted
        environment: preview
        needs:
            - Check_changes
            - Image_build
        if: |
            always() &&
            needs.Check_changes.result == 'success' &&
            (needs.Image_build.result == 'success' || needs.Image_build.result == 'skipped')
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Build and push - Nginx
              uses: docker/build-push-action@v5
              with:
                  context: ./nginx
                  push: true
                  tags: paranoidphantom/550-nginx:latest
            - name: "Creates supabase .env file"
              run: |
                  echo -e "${{ secrets.SUPABASE_ENV }}" > supabase/.env
            - name: Pull latest images
              run: |
                  docker compose pull
            - name: Shutdown services
              run: |
                  docker compose down
            - name: Deploy preview
              run: |
                  docker compose up -d
            - name: "Clean docker system"
              run: |
                  docker system prune -fa
